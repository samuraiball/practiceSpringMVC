<?xml version="1.0" encoding="UTF-8"?>
    <flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">

        <!--変数の設定。すべてのステイトで利用可能-->
        <var name="order" class="com.packt.webstore.domain.Order"/>

        <!--validationをかけてその結果をorder.cartへ-->
        <action-state id="addCartToOrder">
            <evaluate expression="cartServiceImpl.validate(requestParameters.cartId)" result="order.cart"/>
            <!--上のvalidationにひかかった場合-->
            <transition to="invalidCartWarning" on-exception="com.packt.webstore.exeption.InvalidCartException"/>
            <!--上のvalidationに引っかからなかった場合、ここでcollectionCustomerInfoは下のview-stateで設定-->
            <transition to="collectCustomerInfo"/>
        </action-state>

        <view-state id="collectCustomerInfo" view="collectCustomerInfo.jsp" model="order">
           <!--collectionCustomerInfoViewでsubmitが押されたさいにcollectShippingDetailViewを呼び出し-->
            <transition on="customerInfoCollected" to="collectShippingDetail"/>
        </view-state>
        <view-state id="collectShippingDetail" model="order">
            <!--shippingDetailCollectedはcheckout-どこにも定義されていないがこの場合 Spring View FlowはView名として扱う。-->
            <transition on="shippingDetailCollected" to="orderConfirmation"/>
            <transition on="backToCollectCustomerInfo" to="collectCustomerInfo"/>
        </view-state>
        <view-state id="orderConfirmation">
            <transition on="orderConfirmed" to="processOrder"/>
            <transition on="backToCollectShippingDetail" to="collectShippingDetail"/>
        </view-state>
        <action-state id="processOrder">
            <evaluate expression="orderServiceImpl.saveOrder(order)" result="order.orderId"/>
            <transition to="thankCustomer"/>
        </action-state>
        <view-state id="invalidCartWarning">
            <transition to="endState"/>
        </view-state>
        <view-state id="thankCustomer" model="order">
            <transition to="endState"/>
        </view-state>

        <end-state id="endState"/>
        <end-state id="cancelCheckout" view="checkOutCancelled.jsp"/>
        <global-transitions>
            <transition on="cancel" to="cancelCheckout"/>
        </global-transitions>
    </flow>


